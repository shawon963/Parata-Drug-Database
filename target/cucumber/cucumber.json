[
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2023-01-02T07:04:36.380Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and DrugDB database for table \"StatusType\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-drugdb-database;verify-table-columns-and-data-sync-between-pddb-lp-and-drugdb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 791016600,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 716299300,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"DrugDB\" from CDDB server",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.connectionSetupWithDatabaseFromCDDBServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 986600,
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 256442200,
              "status": "passed"
            },
            "line": 7,
            "name": "Procedure \"SP_Pull_StatusType\" columns in PDDB_LP database should be same as table \"StatusType\" columns in DrugDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"SP_Pull_StatusType\"",
                  "offset": 10
                },
                {
                  "val": "\"StatusType\"",
                  "offset": 83
                }
              ],
              "location": "step.AzureCDDBSPAndTableEvaluateTest.ProcedureColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInDrugDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 59996900,
              "status": "passed"
            },
            "line": 8,
            "name": "Procedure \"SP_Pull_StatusType\" data count in PDDB_LP database should be equals to table \"StatusType\" data count in DrugDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"SP_Pull_StatusType\"",
                  "offset": 10
                },
                {
                  "val": "\"StatusType\"",
                  "offset": 88
                }
              ],
              "location": "step.AzureCDDBSPAndTableEvaluateTest.ProcedureDataCountInPDDB_LPDatabaseWithinAzureServerAndTableDataInDrugDBDatabaseWithinCDDBServer(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and DrugDB Database"
          },
          {
            "name": "@dataFile:drug_database_test_data/azure_cddb_proc_with_table_validation.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-02T07:04:38.314Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and DrugDB database for table \"DrugNonCountReason\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-drugdb-database;verify-table-columns-and-data-sync-between-pddb-lp-and-drugdb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 178492100,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 800542000,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"DrugDB\" from CDDB server",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.connectionSetupWithDatabaseFromCDDBServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1011100,
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 34802600,
              "status": "passed"
            },
            "line": 7,
            "name": "Procedure \"SP_Pull_DrugNonCountReason\" columns in PDDB_LP database should be same as table \"DrugNonCountReason\" columns in DrugDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"SP_Pull_DrugNonCountReason\"",
                  "offset": 10
                },
                {
                  "val": "\"DrugNonCountReason\"",
                  "offset": 91
                }
              ],
              "location": "step.AzureCDDBSPAndTableEvaluateTest.ProcedureColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInDrugDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 47153700,
              "status": "passed"
            },
            "line": 8,
            "name": "Procedure \"SP_Pull_DrugNonCountReason\" data count in PDDB_LP database should be equals to table \"DrugNonCountReason\" data count in DrugDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"SP_Pull_DrugNonCountReason\"",
                  "offset": 10
                },
                {
                  "val": "\"DrugNonCountReason\"",
                  "offset": 96
                }
              ],
              "location": "step.AzureCDDBSPAndTableEvaluateTest.ProcedureDataCountInPDDB_LPDatabaseWithinAzureServerAndTableDataInDrugDBDatabaseWithinCDDBServer(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and DrugDB Database"
          },
          {
            "name": "@dataFile:drug_database_test_data/azure_cddb_proc_with_table_validation.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-02T07:04:39.397Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and DrugDB database for table \"Inventory\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-drugdb-database;verify-table-columns-and-data-sync-between-pddb-lp-and-drugdb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 176382000,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 519238700,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"DrugDB\" from CDDB server",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.connectionSetupWithDatabaseFromCDDBServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "net.javacrumbs.jsonunit.core.internal.BasicExceptionFactory$BasicJsonAssertError: JSON documents are different:\nArray \"\" has different length, expected: \u003c13\u003e but was: \u003c21\u003e.\nArray \"\" has different content. Missing values: [\"InventoryID\"], extra values: [\"InventoryId\", \"Id\", \"DestroyDate\", \"Destroyed\", \"DestroyedBy\", \"DestroyedComments\", \"SourceAddress\", \"SourceEmail\", \"SourcePhone\"], expected: \u003c[\"StatusTypeId\",\"StatusTypeDescription\",\"Id\",\"Reason\",\"InventoryID\",\"DrugNumber\",\"Date\",\"Source\",\"Quantity\",\"Price\",\"Comments\",\"ChangedBy\",\"ChangedDate\"]\u003e but was: \u003c[\"StatusTypeId\",\"StatusTypeDescription\",\"Id\",\"Reason\",\"InventoryId\",\"DrugNumber\",\"Date\",\"Source\",\"Quantity\",\"Price\",\"Comments\",\"ChangedBy\",\"ChangedDate\",\"Id\",\"DestroyDate\",\"Destroyed\",\"DestroyedBy\",\"DestroyedComments\",\"SourceAddress\",\"SourceEmail\",\"SourcePhone\"]\u003e\n\r\n\tat net.javacrumbs.jsonunit.core.internal.BasicExceptionFactory.createException(ExceptionFactory.java:19)\r\n\tat net.javacrumbs.jsonunit.core.internal.ExceptionUtils.createException(ExceptionUtils.java:45)\r\n\tat net.javacrumbs.jsonunit.core.internal.Diff.failIfDifferent(Diff.java:617)\r\n\tat net.javacrumbs.jsonunit.assertj.JsonAssert.isEqualTo(JsonAssert.java:117)\r\n\tat step.AzureCDDBSPAndTableEvaluateTest.ProcedureColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInDrugDBDatabase(AzureCDDBSPAndTableEvaluateTest.java:24)\r\n\tat ✽.Procedure \"SP_Pull_Inventory\" columns in PDDB_LP database should be same as table \"Inventory\" columns in DrugDB database(file:///F:/Ether/Ether/QA/parata-database-testing-qa/src/test/resources/feature/data-and-column-test-azure-cddb-sp-and-table-evaluate.feature:7)\r\n",
              "duration": 88705400,
              "status": "failed"
            },
            "line": 7,
            "name": "Procedure \"SP_Pull_Inventory\" columns in PDDB_LP database should be same as table \"Inventory\" columns in DrugDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"SP_Pull_Inventory\"",
                  "offset": 10
                },
                {
                  "val": "\"Inventory\"",
                  "offset": 82
                }
              ],
              "location": "step.AzureCDDBSPAndTableEvaluateTest.ProcedureColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInDrugDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1008000,
              "status": "skipped"
            },
            "line": 8,
            "name": "Procedure \"SP_Pull_Inventory\" data count in PDDB_LP database should be equals to table \"Inventory\" data count in DrugDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"SP_Pull_Inventory\"",
                  "offset": 10
                },
                {
                  "val": "\"Inventory\"",
                  "offset": 87
                }
              ],
              "location": "step.AzureCDDBSPAndTableEvaluateTest.ProcedureDataCountInPDDB_LPDatabaseWithinAzureServerAndTableDataInDrugDBDatabaseWithinCDDBServer(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and DrugDB Database"
          },
          {
            "name": "@dataFile:drug_database_test_data/azure_cddb_proc_with_table_validation.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-02T07:04:40.203Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and DrugDB database for table \"ClassificationShape\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-drugdb-database;verify-table-columns-and-data-sync-between-pddb-lp-and-drugdb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 172302800,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 482465200,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"DrugDB\" from CDDB server",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.connectionSetupWithDatabaseFromCDDBServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1007900,
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "net.javacrumbs.jsonunit.core.internal.BasicExceptionFactory$BasicJsonAssertError: JSON documents are different:\nArray \"\" has different length, expected: \u003c17\u003e but was: \u003c25\u003e.\nArray \"\" has different content. Missing values: [\"InventoryID\", \"ClassificationShapeID\"], extra values: [\"InventoryId\", \"Id\", \"DestroyDate\", \"Destroyed\", \"DestroyedBy\", \"DestroyedComments\", \"SourceAddress\", \"SourceEmail\", \"SourcePhone\", \"ClassificationShapeId\"], expected: \u003c[\"StatusTypeId\",\"StatusTypeDescription\",\"Id\",\"Reason\",\"InventoryID\",\"DrugNumber\",\"Date\",\"Source\",\"Quantity\",\"Price\",\"Comments\",\"ChangedBy\",\"ChangedDate\",\"ClassificationShapeID\",\"ClassificationShapeDescription\",\"HandlerAssembly\",\"HandlerClass\"]\u003e but was: \u003c[\"StatusTypeId\",\"StatusTypeDescription\",\"Id\",\"Reason\",\"InventoryId\",\"DrugNumber\",\"Date\",\"Source\",\"Quantity\",\"Price\",\"Comments\",\"ChangedBy\",\"ChangedDate\",\"Id\",\"DestroyDate\",\"Destroyed\",\"DestroyedBy\",\"DestroyedComments\",\"SourceAddress\",\"SourceEmail\",\"SourcePhone\",\"ClassificationShapeId\",\"ClassificationShapeDescription\",\"HandlerAssembly\",\"HandlerClass\"]\u003e\n\r\n\tat net.javacrumbs.jsonunit.core.internal.BasicExceptionFactory.createException(ExceptionFactory.java:19)\r\n\tat net.javacrumbs.jsonunit.core.internal.ExceptionUtils.createException(ExceptionUtils.java:45)\r\n\tat net.javacrumbs.jsonunit.core.internal.Diff.failIfDifferent(Diff.java:617)\r\n\tat net.javacrumbs.jsonunit.assertj.JsonAssert.isEqualTo(JsonAssert.java:117)\r\n\tat step.AzureCDDBSPAndTableEvaluateTest.ProcedureColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInDrugDBDatabase(AzureCDDBSPAndTableEvaluateTest.java:24)\r\n\tat ✽.Procedure \"SP_Pull_ClassificationShape\" columns in PDDB_LP database should be same as table \"ClassificationShape\" columns in DrugDB database(file:///F:/Ether/Ether/QA/parata-database-testing-qa/src/test/resources/feature/data-and-column-test-azure-cddb-sp-and-table-evaluate.feature:7)\r\n",
              "duration": 63923400,
              "status": "failed"
            },
            "line": 7,
            "name": "Procedure \"SP_Pull_ClassificationShape\" columns in PDDB_LP database should be same as table \"ClassificationShape\" columns in DrugDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"SP_Pull_ClassificationShape\"",
                  "offset": 10
                },
                {
                  "val": "\"ClassificationShape\"",
                  "offset": 92
                }
              ],
              "location": "step.AzureCDDBSPAndTableEvaluateTest.ProcedureColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInDrugDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1006100,
              "status": "skipped"
            },
            "line": 8,
            "name": "Procedure \"SP_Pull_ClassificationShape\" data count in PDDB_LP database should be equals to table \"ClassificationShape\" data count in DrugDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"SP_Pull_ClassificationShape\"",
                  "offset": 10
                },
                {
                  "val": "\"ClassificationShape\"",
                  "offset": 97
                }
              ],
              "location": "step.AzureCDDBSPAndTableEvaluateTest.ProcedureDataCountInPDDB_LPDatabaseWithinAzureServerAndTableDataInDrugDBDatabaseWithinCDDBServer(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and DrugDB Database"
          },
          {
            "name": "@dataFile:drug_database_test_data/azure_cddb_proc_with_table_validation.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-02T07:04:40.945Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and DrugDB database for table \"DrugStatus\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-drugdb-database;verify-table-columns-and-data-sync-between-pddb-lp-and-drugdb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 171987600,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 524755000,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"DrugDB\" from CDDB server",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.connectionSetupWithDatabaseFromCDDBServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "net.javacrumbs.jsonunit.core.internal.BasicExceptionFactory$BasicJsonAssertError: JSON documents are different:\nArray \"\" has different length, expected: \u003c24\u003e but was: \u003c33\u003e.\nArray \"\" has different content. Missing values: [\"InventoryID\", \"ClassificationShapeID\", \"StatusID\", \"StatusTypeID\", \"DeviceID\"], extra values: [\"InventoryId\", \"Id\", \"DestroyDate\", \"Destroyed\", \"DestroyedBy\", \"DestroyedComments\", \"SourceAddress\", \"SourceEmail\", \"SourcePhone\", \"ClassificationShapeId\", \"StatusId\", \"StatusTypeId\", \"DeviceId\", \"Id\"], expected: \u003c[\"StatusTypeId\",\"StatusTypeDescription\",\"Id\",\"Reason\",\"InventoryID\",\"DrugNumber\",\"Date\",\"Source\",\"Quantity\",\"Price\",\"Comments\",\"ChangedBy\",\"ChangedDate\",\"ClassificationShapeID\",\"ClassificationShapeDescription\",\"HandlerAssembly\",\"HandlerClass\",\"StatusID\",\"StatusTypeID\",\"DeviceID\",\"DrugNumber\",\"Comments\",\"NonCountReasonID\",\"IsSuperCellOnly\"]\u003e but was: \u003c[\"StatusTypeId\",\"StatusTypeDescription\",\"Id\",\"Reason\",\"InventoryId\",\"DrugNumber\",\"Date\",\"Source\",\"Quantity\",\"Price\",\"Comments\",\"ChangedBy\",\"ChangedDate\",\"Id\",\"DestroyDate\",\"Destroyed\",\"DestroyedBy\",\"DestroyedComments\",\"SourceAddress\",\"SourceEmail\",\"SourcePhone\",\"ClassificationShapeId\",\"ClassificationShapeDescription\",\"HandlerAssembly\",\"HandlerClass\",\"StatusId\",\"StatusTypeId\",\"DeviceId\",\"DrugNumber\",\"Comments\",\"NonCountReasonID\",\"IsSuperCellOnly\",\"Id\"]\u003e\n\r\n\tat net.javacrumbs.jsonunit.core.internal.BasicExceptionFactory.createException(ExceptionFactory.java:19)\r\n\tat net.javacrumbs.jsonunit.core.internal.ExceptionUtils.createException(ExceptionUtils.java:45)\r\n\tat net.javacrumbs.jsonunit.core.internal.Diff.failIfDifferent(Diff.java:617)\r\n\tat net.javacrumbs.jsonunit.assertj.JsonAssert.isEqualTo(JsonAssert.java:117)\r\n\tat step.AzureCDDBSPAndTableEvaluateTest.ProcedureColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInDrugDBDatabase(AzureCDDBSPAndTableEvaluateTest.java:24)\r\n\tat ✽.Procedure \"SP_Pull_Status\" columns in PDDB_LP database should be same as table \"DrugStatus\" columns in DrugDB database(file:///F:/Ether/Ether/QA/parata-database-testing-qa/src/test/resources/feature/data-and-column-test-azure-cddb-sp-and-table-evaluate.feature:7)\r\n",
              "duration": 61793700,
              "status": "failed"
            },
            "line": 7,
            "name": "Procedure \"SP_Pull_Status\" columns in PDDB_LP database should be same as table \"DrugStatus\" columns in DrugDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"SP_Pull_Status\"",
                  "offset": 10
                },
                {
                  "val": "\"DrugStatus\"",
                  "offset": 79
                }
              ],
              "location": "step.AzureCDDBSPAndTableEvaluateTest.ProcedureColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInDrugDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 995500,
              "status": "skipped"
            },
            "line": 8,
            "name": "Procedure \"SP_Pull_Status\" data count in PDDB_LP database should be equals to table \"DrugStatus\" data count in DrugDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"SP_Pull_Status\"",
                  "offset": 10
                },
                {
                  "val": "\"DrugStatus\"",
                  "offset": 84
                }
              ],
              "location": "step.AzureCDDBSPAndTableEvaluateTest.ProcedureDataCountInPDDB_LPDatabaseWithinAzureServerAndTableDataInDrugDBDatabaseWithinCDDBServer(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and DrugDB Database"
          },
          {
            "name": "@dataFile:drug_database_test_data/azure_cddb_proc_with_table_validation.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-02T07:04:41.727Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and DrugDB database for table \"DrugAttribute\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-drugdb-database;verify-table-columns-and-data-sync-between-pddb-lp-and-drugdb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 174914900,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 567285400,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"DrugDB\" from CDDB server",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.connectionSetupWithDatabaseFromCDDBServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1070000,
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "net.javacrumbs.jsonunit.core.internal.BasicExceptionFactory$BasicJsonAssertError: JSON documents are different:\nArray \"\" has different length, expected: \u003c33\u003e but was: \u003c43\u003e.\nArray \"\" has different content. Missing values: [\"InventoryID\", \"ClassificationShapeID\", \"StatusID\", \"StatusTypeID\", \"DeviceID\"], extra values: [\"InventoryId\", \"Id\", \"DestroyDate\", \"Destroyed\", \"DestroyedBy\", \"DestroyedComments\", \"SourceAddress\", \"SourceEmail\", \"SourcePhone\", \"ClassificationShapeId\", \"StatusId\", \"StatusTypeId\", \"DeviceId\", \"Id\", \"Id\"], expected: \u003c[\"StatusTypeId\",\"StatusTypeDescription\",\"Id\",\"Reason\",\"InventoryID\",\"DrugNumber\",\"Date\",\"Source\",\"Quantity\",\"Price\",\"Comments\",\"ChangedBy\",\"ChangedDate\",\"ClassificationShapeID\",\"ClassificationShapeDescription\",\"HandlerAssembly\",\"HandlerClass\",\"StatusID\",\"StatusTypeID\",\"DeviceID\",\"DrugNumber\",\"Comments\",\"NonCountReasonID\",\"IsSuperCellOnly\",\"DrugAttributeId\",\"CleaningCodeId\",\"ColorId\",\"CoatingId\",\"ShapeId\",\"ImprintFront\",\"ImprintBack\",\"DosageFormId\",\"Scored\"]\u003e but was: \u003c[\"StatusTypeId\",\"StatusTypeDescription\",\"Id\",\"Reason\",\"InventoryId\",\"DrugNumber\",\"Date\",\"Source\",\"Quantity\",\"Price\",\"Comments\",\"ChangedBy\",\"ChangedDate\",\"Id\",\"DestroyDate\",\"Destroyed\",\"DestroyedBy\",\"DestroyedComments\",\"SourceAddress\",\"SourceEmail\",\"SourcePhone\",\"ClassificationShapeId\",\"ClassificationShapeDescription\",\"HandlerAssembly\",\"HandlerClass\",\"StatusId\",\"StatusTypeId\",\"DeviceId\",\"DrugNumber\",\"Comments\",\"NonCountReasonID\",\"IsSuperCellOnly\",\"Id\",\"Id\",\"DrugAttributeId\",\"CleaningCodeId\",\"ColorId\",\"CoatingId\",\"ShapeId\",\"ImprintFront\",\"ImprintBack\",\"DosageFormId\",\"Scored\"]\u003e\n\r\n\tat net.javacrumbs.jsonunit.core.internal.BasicExceptionFactory.createException(ExceptionFactory.java:19)\r\n\tat net.javacrumbs.jsonunit.core.internal.ExceptionUtils.createException(ExceptionUtils.java:45)\r\n\tat net.javacrumbs.jsonunit.core.internal.Diff.failIfDifferent(Diff.java:617)\r\n\tat net.javacrumbs.jsonunit.assertj.JsonAssert.isEqualTo(JsonAssert.java:117)\r\n\tat step.AzureCDDBSPAndTableEvaluateTest.ProcedureColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInDrugDBDatabase(AzureCDDBSPAndTableEvaluateTest.java:24)\r\n\tat ✽.Procedure \"SP_Pull_DrugAttribute\" columns in PDDB_LP database should be same as table \"DrugAttribute\" columns in DrugDB database(file:///F:/Ether/Ether/QA/parata-database-testing-qa/src/test/resources/feature/data-and-column-test-azure-cddb-sp-and-table-evaluate.feature:7)\r\n",
              "duration": 78252700,
              "status": "failed"
            },
            "line": 7,
            "name": "Procedure \"SP_Pull_DrugAttribute\" columns in PDDB_LP database should be same as table \"DrugAttribute\" columns in DrugDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"SP_Pull_DrugAttribute\"",
                  "offset": 10
                },
                {
                  "val": "\"DrugAttribute\"",
                  "offset": 86
                }
              ],
              "location": "step.AzureCDDBSPAndTableEvaluateTest.ProcedureColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInDrugDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "Procedure \"SP_Pull_DrugAttribute\" data count in PDDB_LP database should be equals to table \"DrugAttribute\" data count in DrugDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"SP_Pull_DrugAttribute\"",
                  "offset": 10
                },
                {
                  "val": "\"DrugAttribute\"",
                  "offset": 91
                }
              ],
              "location": "step.AzureCDDBSPAndTableEvaluateTest.ProcedureDataCountInPDDB_LPDatabaseWithinAzureServerAndTableDataInDrugDBDatabaseWithinCDDBServer(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and DrugDB Database"
          },
          {
            "name": "@dataFile:drug_database_test_data/azure_cddb_proc_with_table_validation.xls"
          }
        ]
      }
    ],
    "name": "Table Data and Column Test between PDDB_LP and DrugDB Database",
    "description": "",
    "id": "table-data-and-column-test-between-pddb-lp-and-drugdb-database",
    "keyword": "Feature",
    "uri": "file:src/test/resources/feature/data-and-column-test-azure-cddb-sp-and-table-evaluate.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2023-01-02T07:04:42.570Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"DrugColor\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 172985300,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 174128700,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 60081200,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"DrugColor\" columns in PDDB_LP database should be same as table \"DrugColor\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugColor\"",
                  "offset": 6
                },
                {
                  "val": "\"DrugColor\"",
                  "offset": 70
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 70012100,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"DrugColor\" data count in PDDB_LP database should be equals to table \"DrugColor\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugColor\"",
                  "offset": 6
                },
                {
                  "val": "\"DrugColor\"",
                  "offset": 75
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB"
          },
          {
            "name": "@dataFile:drug_database_test_data/column-data-count-between-azure-and-onprem-table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-02T07:04:43.066Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"ClassificationShape\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 156989300,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 176013400,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 52992400,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"ClassificationShape\" columns in PDDB_LP database should be same as table \"ClassificationShape\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"ClassificationShape\"",
                  "offset": 6
                },
                {
                  "val": "\"ClassificationShape\"",
                  "offset": 80
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 51990300,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"ClassificationShape\" data count in PDDB_LP database should be equals to table \"ClassificationShape\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"ClassificationShape\"",
                  "offset": 6
                },
                {
                  "val": "\"ClassificationShape\"",
                  "offset": 85
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB"
          },
          {
            "name": "@dataFile:drug_database_test_data/column-data-count-between-azure-and-onprem-table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-02T07:04:43.517Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"DrugCore\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 153991700,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 168400200,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1069000,
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 53320900,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"DrugCore\" columns in PDDB_LP database should be same as table \"DrugCore\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugCore\"",
                  "offset": 6
                },
                {
                  "val": "\"DrugCore\"",
                  "offset": 69
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected:\u003c37556\u003e but was:\u003c37583\u003e\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat step.OnPremAzureTableDataAndColumnvalidationTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(OnPremAzureTableDataAndColumnvalidationTest.java:26)\r\n\tat ✽.Table \"DrugCore\" data count in PDDB_LP database should be equals to table \"DrugCore\" data count in PDDB database(file:///F:/Ether/Ether/QA/parata-database-testing-qa/src/test/resources/feature/data-and-column-test-between-onprem-azure-table.feature:8)\r\n",
              "duration": 70332400,
              "status": "failed"
            },
            "line": 8,
            "name": "Table \"DrugCore\" data count in PDDB_LP database should be equals to table \"DrugCore\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugCore\"",
                  "offset": 6
                },
                {
                  "val": "\"DrugCore\"",
                  "offset": 74
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB"
          },
          {
            "name": "@dataFile:drug_database_test_data/column-data-count-between-azure-and-onprem-table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-02T07:04:43.975Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"DrugName\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 150096000,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 169477500,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1064900,
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 53801600,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"DrugName\" columns in PDDB_LP database should be same as table \"DrugName\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugName\"",
                  "offset": 6
                },
                {
                  "val": "\"DrugName\"",
                  "offset": 69
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected:\u003c37837\u003e but was:\u003c37864\u003e\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat step.OnPremAzureTableDataAndColumnvalidationTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(OnPremAzureTableDataAndColumnvalidationTest.java:26)\r\n\tat ✽.Table \"DrugName\" data count in PDDB_LP database should be equals to table \"DrugName\" data count in PDDB database(file:///F:/Ether/Ether/QA/parata-database-testing-qa/src/test/resources/feature/data-and-column-test-between-onprem-azure-table.feature:8)\r\n",
              "duration": 61643800,
              "status": "failed"
            },
            "line": 8,
            "name": "Table \"DrugName\" data count in PDDB_LP database should be equals to table \"DrugName\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugName\"",
                  "offset": 6
                },
                {
                  "val": "\"DrugName\"",
                  "offset": 74
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB"
          },
          {
            "name": "@dataFile:drug_database_test_data/column-data-count-between-azure-and-onprem-table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-02T07:04:44.426Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"DrugNonCountReason\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 149002600,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 174194100,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 52002600,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"DrugNonCountReason\" columns in PDDB_LP database should be same as table \"DrugNonCountReason\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugNonCountReason\"",
                  "offset": 6
                },
                {
                  "val": "\"DrugNonCountReason\"",
                  "offset": 79
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 52999100,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"DrugNonCountReason\" data count in PDDB_LP database should be equals to table \"DrugNonCountReason\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugNonCountReason\"",
                  "offset": 6
                },
                {
                  "val": "\"DrugNonCountReason\"",
                  "offset": 84
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB"
          },
          {
            "name": "@dataFile:drug_database_test_data/column-data-count-between-azure-and-onprem-table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-02T07:04:44.865Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"Firm\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 153988900,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 171992800,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 52331400,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"Firm\" columns in PDDB_LP database should be same as table \"Firm\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"Firm\"",
                  "offset": 6
                },
                {
                  "val": "\"Firm\"",
                  "offset": 65
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected:\u003c2526\u003e but was:\u003c2528\u003e\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat step.OnPremAzureTableDataAndColumnvalidationTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(OnPremAzureTableDataAndColumnvalidationTest.java:26)\r\n\tat ✽.Table \"Firm\" data count in PDDB_LP database should be equals to table \"Firm\" data count in PDDB database(file:///F:/Ether/Ether/QA/parata-database-testing-qa/src/test/resources/feature/data-and-column-test-between-onprem-azure-table.feature:8)\r\n",
              "duration": 52322200,
              "status": "failed"
            },
            "line": 8,
            "name": "Table \"Firm\" data count in PDDB_LP database should be equals to table \"Firm\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"Firm\"",
                  "offset": 6
                },
                {
                  "val": "\"Firm\"",
                  "offset": 70
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB"
          },
          {
            "name": "@dataFile:drug_database_test_data/column-data-count-between-azure-and-onprem-table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-02T07:04:45.308Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"Inventory\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 151686500,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 174315300,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 53611600,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"Inventory\" columns in PDDB_LP database should be same as table \"Inventory\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"Inventory\"",
                  "offset": 6
                },
                {
                  "val": "\"Inventory\"",
                  "offset": 70
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected:\u003c36111\u003e but was:\u003c36141\u003e\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat step.OnPremAzureTableDataAndColumnvalidationTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(OnPremAzureTableDataAndColumnvalidationTest.java:26)\r\n\tat ✽.Table \"Inventory\" data count in PDDB_LP database should be equals to table \"Inventory\" data count in PDDB database(file:///F:/Ether/Ether/QA/parata-database-testing-qa/src/test/resources/feature/data-and-column-test-between-onprem-azure-table.feature:8)\r\n",
              "duration": 62842100,
              "status": "failed"
            },
            "line": 8,
            "name": "Table \"Inventory\" data count in PDDB_LP database should be equals to table \"Inventory\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"Inventory\"",
                  "offset": 6
                },
                {
                  "val": "\"Inventory\"",
                  "offset": 75
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB"
          },
          {
            "name": "@dataFile:drug_database_test_data/column-data-count-between-azure-and-onprem-table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-02T07:04:45.761Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"DrugShape\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 154916800,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 170990400,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 54003400,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"DrugShape\" columns in PDDB_LP database should be same as table \"DrugShape\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugShape\"",
                  "offset": 6
                },
                {
                  "val": "\"DrugShape\"",
                  "offset": 70
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 51994300,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"DrugShape\" data count in PDDB_LP database should be equals to table \"DrugShape\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugShape\"",
                  "offset": 6
                },
                {
                  "val": "\"DrugShape\"",
                  "offset": 75
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB"
          },
          {
            "name": "@dataFile:drug_database_test_data/column-data-count-between-azure-and-onprem-table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-02T07:04:46.205Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"Measurements\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 152006300,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 168187500,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1054400,
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 53242600,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"Measurements\" columns in PDDB_LP database should be same as table \"Measurements\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"Measurements\"",
                  "offset": 6
                },
                {
                  "val": "\"Measurements\"",
                  "offset": 73
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected:\u003c37839\u003e but was:\u003c37866\u003e\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat step.OnPremAzureTableDataAndColumnvalidationTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(OnPremAzureTableDataAndColumnvalidationTest.java:26)\r\n\tat ✽.Table \"Measurements\" data count in PDDB_LP database should be equals to table \"Measurements\" data count in PDDB database(file:///F:/Ether/Ether/QA/parata-database-testing-qa/src/test/resources/feature/data-and-column-test-between-onprem-azure-table.feature:8)\r\n",
              "duration": 67527100,
              "status": "failed"
            },
            "line": 8,
            "name": "Table \"Measurements\" data count in PDDB_LP database should be equals to table \"Measurements\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"Measurements\"",
                  "offset": 6
                },
                {
                  "val": "\"Measurements\"",
                  "offset": 78
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB"
          },
          {
            "name": "@dataFile:drug_database_test_data/column-data-count-between-azure-and-onprem-table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-02T07:04:46.659Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"PassCanister\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 154382700,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 170218500,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1060000,
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 53443600,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"PassCanister\" columns in PDDB_LP database should be same as table \"PassCanister\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"PassCanister\"",
                  "offset": 6
                },
                {
                  "val": "\"PassCanister\"",
                  "offset": 73
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 52661900,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"PassCanister\" data count in PDDB_LP database should be equals to table \"PassCanister\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"PassCanister\"",
                  "offset": 6
                },
                {
                  "val": "\"PassCanister\"",
                  "offset": 78
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB"
          },
          {
            "name": "@dataFile:drug_database_test_data/column-data-count-between-azure-and-onprem-table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-02T07:04:47.102Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"PassScenarioDrug\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 156991000,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 174867900,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1005200,
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 54380400,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"PassScenarioDrug\" columns in PDDB_LP database should be same as table \"PassScenarioDrug\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"PassScenarioDrug\"",
                  "offset": 6
                },
                {
                  "val": "\"PassScenarioDrug\"",
                  "offset": 77
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected:\u003c189477\u003e but was:\u003c190546\u003e\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat step.OnPremAzureTableDataAndColumnvalidationTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(OnPremAzureTableDataAndColumnvalidationTest.java:26)\r\n\tat ✽.Table \"PassScenarioDrug\" data count in PDDB_LP database should be equals to table \"PassScenarioDrug\" data count in PDDB database(file:///F:/Ether/Ether/QA/parata-database-testing-qa/src/test/resources/feature/data-and-column-test-between-onprem-azure-table.feature:8)\r\n",
              "duration": 80347100,
              "status": "failed"
            },
            "line": 8,
            "name": "Table \"PassScenarioDrug\" data count in PDDB_LP database should be equals to table \"PassScenarioDrug\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"PassScenarioDrug\"",
                  "offset": 6
                },
                {
                  "val": "\"PassScenarioDrug\"",
                  "offset": 82
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB"
          },
          {
            "name": "@dataFile:drug_database_test_data/column-data-count-between-azure-and-onprem-table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-02T07:04:47.581Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"DosageForm\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 162974400,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 169211900,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1027700,
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 52381900,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"DosageForm\" columns in PDDB_LP database should be same as table \"DosageForm\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DosageForm\"",
                  "offset": 6
                },
                {
                  "val": "\"DosageForm\"",
                  "offset": 71
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 52118000,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"DosageForm\" data count in PDDB_LP database should be equals to table \"DosageForm\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DosageForm\"",
                  "offset": 6
                },
                {
                  "val": "\"DosageForm\"",
                  "offset": 76
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB"
          },
          {
            "name": "@dataFile:drug_database_test_data/column-data-count-between-azure-and-onprem-table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-02T07:04:48.026Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"DrugAttribute\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 150914500,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 170088200,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1009200,
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 52747000,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"DrugAttribute\" columns in PDDB_LP database should be same as table \"DrugAttribute\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugAttribute\"",
                  "offset": 6
                },
                {
                  "val": "\"DrugAttribute\"",
                  "offset": 74
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected:\u003c37839\u003e but was:\u003c37866\u003e\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat step.OnPremAzureTableDataAndColumnvalidationTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(OnPremAzureTableDataAndColumnvalidationTest.java:26)\r\n\tat ✽.Table \"DrugAttribute\" data count in PDDB_LP database should be equals to table \"DrugAttribute\" data count in PDDB database(file:///F:/Ether/Ether/QA/parata-database-testing-qa/src/test/resources/feature/data-and-column-test-between-onprem-azure-table.feature:8)\r\n",
              "duration": 62003000,
              "status": "failed"
            },
            "line": 8,
            "name": "Table \"DrugAttribute\" data count in PDDB_LP database should be equals to table \"DrugAttribute\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugAttribute\"",
                  "offset": 6
                },
                {
                  "val": "\"DrugAttribute\"",
                  "offset": 79
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB"
          },
          {
            "name": "@dataFile:drug_database_test_data/column-data-count-between-azure-and-onprem-table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-02T07:04:48.474Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"PassDrugCanister\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 154000300,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 167594900,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 51460600,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"PassDrugCanister\" columns in PDDB_LP database should be same as table \"PassDrugCanister\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"PassDrugCanister\"",
                  "offset": 6
                },
                {
                  "val": "\"PassDrugCanister\"",
                  "offset": 77
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected:\u003c11389\u003e but was:\u003c11417\u003e\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat step.OnPremAzureTableDataAndColumnvalidationTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(OnPremAzureTableDataAndColumnvalidationTest.java:26)\r\n\tat ✽.Table \"PassDrugCanister\" data count in PDDB_LP database should be equals to table \"PassDrugCanister\" data count in PDDB database(file:///F:/Ether/Ether/QA/parata-database-testing-qa/src/test/resources/feature/data-and-column-test-between-onprem-azure-table.feature:8)\r\n",
              "duration": 55158100,
              "status": "failed"
            },
            "line": 8,
            "name": "Table \"PassDrugCanister\" data count in PDDB_LP database should be equals to table \"PassDrugCanister\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"PassDrugCanister\"",
                  "offset": 6
                },
                {
                  "val": "\"PassDrugCanister\"",
                  "offset": 82
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB"
          },
          {
            "name": "@dataFile:drug_database_test_data/column-data-count-between-azure-and-onprem-table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-02T07:04:48.912Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"StrengthUnitType\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 147375600,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 165676900,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1078500,
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 52232000,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"StrengthUnitType\" columns in PDDB_LP database should be same as table \"StrengthUnitType\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"StrengthUnitType\"",
                  "offset": 6
                },
                {
                  "val": "\"StrengthUnitType\"",
                  "offset": 77
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 51778800,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"StrengthUnitType\" data count in PDDB_LP database should be equals to table \"StrengthUnitType\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"StrengthUnitType\"",
                  "offset": 6
                },
                {
                  "val": "\"StrengthUnitType\"",
                  "offset": 82
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB"
          },
          {
            "name": "@dataFile:drug_database_test_data/column-data-count-between-azure-and-onprem-table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-02T07:04:49.338Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"DeviceSettingMax\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 152174100,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 166383400,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 54006100,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"DeviceSettingMax\" columns in PDDB_LP database should be same as table \"DeviceSettingMax\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DeviceSettingMax\"",
                  "offset": 6
                },
                {
                  "val": "\"DeviceSettingMax\"",
                  "offset": 77
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected:\u003c31457\u003e but was:\u003c31482\u003e\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat step.OnPremAzureTableDataAndColumnvalidationTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(OnPremAzureTableDataAndColumnvalidationTest.java:26)\r\n\tat ✽.Table \"DeviceSettingMax\" data count in PDDB_LP database should be equals to table \"DeviceSettingMax\" data count in PDDB database(file:///F:/Ether/Ether/QA/parata-database-testing-qa/src/test/resources/feature/data-and-column-test-between-onprem-azure-table.feature:8)\r\n",
              "duration": 61009100,
              "status": "failed"
            },
            "line": 8,
            "name": "Table \"DeviceSettingMax\" data count in PDDB_LP database should be equals to table \"DeviceSettingMax\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DeviceSettingMax\"",
                  "offset": 6
                },
                {
                  "val": "\"DeviceSettingMax\"",
                  "offset": 82
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB"
          },
          {
            "name": "@dataFile:drug_database_test_data/column-data-count-between-azure-and-onprem-table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-02T07:04:49.783Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"Coating\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 149000600,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 169852000,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 52437200,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"Coating\" columns in PDDB_LP database should be same as table \"Coating\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"Coating\"",
                  "offset": 6
                },
                {
                  "val": "\"Coating\"",
                  "offset": 68
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 53133500,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"Coating\" data count in PDDB_LP database should be equals to table \"Coating\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"Coating\"",
                  "offset": 6
                },
                {
                  "val": "\"Coating\"",
                  "offset": 73
                }
              ],
              "location": "step.OnPremAzureTableDataAndColumnvalidationTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB"
          },
          {
            "name": "@dataFile:drug_database_test_data/column-data-count-between-azure-and-onprem-table.xls"
          }
        ]
      }
    ],
    "name": "Table Data and Column Test between PDDB_LP and PDDB",
    "description": "",
    "id": "table-data-and-column-test-between-pddb-lp-and-pddb",
    "keyword": "Feature",
    "uri": "file:src/test/resources/feature/data-and-column-test-between-onprem-azure-table.feature",
    "tags": []
  }
]