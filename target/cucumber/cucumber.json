[
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2023-01-16T11:38:25.840Z",
        "line": 3,
        "name": "Verify table columns and data sync between DrugDB and WK database for table \"WKDrugs\"",
        "description": "",
        "id": "table-data-and-column-test-between-drugdb-and-wk-database-from-cddb-server;verify-table-columns-and-data-sync-between-drugdb-and-wk-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1142158900,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"DrugDB\" from CDDB server",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.connectionSetupWithDatabaseFromCDDBServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 589358300,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"WK\" from CDDB server",
            "match": {
              "arguments": [
                {
                  "val": "\"WK\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.connectionSetupWithDatabaseFromCDDBServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 156224800,
              "status": "passed"
            },
            "line": 7,
            "name": "function \"fn_drug_wk\" check from wk database",
            "match": {
              "arguments": [
                {
                  "val": "\"fn_drug_wk\"",
                  "offset": 9
                }
              ],
              "location": "step.DrugDBAndWkDBDatabaseTableFromCDDBServerTestStep.functionCheckFromWkDatabase(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between DrugDB and WK Database from CDDB Server"
          },
          {
            "name": "@dataFile:drug_database_test_data/drugdb_and_wk_database_from_cddb_server_test.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-16T11:38:27.855Z",
        "line": 3,
        "name": "Verify table columns and data sync between DrugDB and WK database for table \"WKLabelWarning\"",
        "description": "",
        "id": "table-data-and-column-test-between-drugdb-and-wk-database-from-cddb-server;verify-table-columns-and-data-sync-between-drugdb-and-wk-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 500438700,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"DrugDB\" from CDDB server",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.connectionSetupWithDatabaseFromCDDBServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 468313100,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"WK\" from CDDB server",
            "match": {
              "arguments": [
                {
                  "val": "\"WK\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.connectionSetupWithDatabaseFromCDDBServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 15950800,
              "status": "passed"
            },
            "line": 7,
            "name": "function \"fn_drug_wk_label_warning\" check from wk database",
            "match": {
              "arguments": [
                {
                  "val": "\"fn_drug_wk_label_warning\"",
                  "offset": 9
                }
              ],
              "location": "step.DrugDBAndWkDBDatabaseTableFromCDDBServerTestStep.functionCheckFromWkDatabase(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between DrugDB and WK Database from CDDB Server"
          },
          {
            "name": "@dataFile:drug_database_test_data/drugdb_and_wk_database_from_cddb_server_test.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-16T11:38:28.871Z",
        "line": 3,
        "name": "Verify table columns and data sync between DrugDB and WK database for table \"WKDrugs\"",
        "description": "",
        "id": "table-data-and-column-test-between-drugdb-and-wk-database-from-cddb-server;verify-table-columns-and-data-sync-between-drugdb-and-wk-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 546905700,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"DrugDB\" from CDDB server",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.connectionSetupWithDatabaseFromCDDBServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 468508200,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"WK\" from CDDB server",
            "match": {
              "arguments": [
                {
                  "val": "\"WK\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.connectionSetupWithDatabaseFromCDDBServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 15668600,
              "status": "passed"
            },
            "line": 7,
            "name": "function \"fn_drug_wk_update\" check from wk database",
            "match": {
              "arguments": [
                {
                  "val": "\"fn_drug_wk_update\"",
                  "offset": 9
                }
              ],
              "location": "step.DrugDBAndWkDBDatabaseTableFromCDDBServerTestStep.functionCheckFromWkDatabase(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between DrugDB and WK Database from CDDB Server"
          },
          {
            "name": "@dataFile:drug_database_test_data/drugdb_and_wk_database_from_cddb_server_test.xls"
          }
        ]
      }
    ],
    "name": "Table Data and Column Test between DrugDB and WK Database from CDDB Server",
    "description": "",
    "id": "table-data-and-column-test-between-drugdb-and-wk-database-from-cddb-server",
    "keyword": "Feature",
    "uri": "file:src/test/resources/feature/drugdb-and-wkdb-database-table-from-cddb-server-test.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2023-01-16T11:38:29.934Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and DrugDB database for table \"StatusType\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-drugdb-database;verify-table-columns-and-data-sync-between-pddb-lp-and-drugdb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 327841200,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 781357700,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"DrugDB\" from CDDB server",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.connectionSetupWithDatabaseFromCDDBServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 234291000,
              "status": "passed"
            },
            "line": 7,
            "name": "Procedure \"SP_Pull_StatusType\" columns in PDDB_LP database should be same as table \"StatusType\" columns in DrugDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"SP_Pull_StatusType\"",
                  "offset": 10
                },
                {
                  "val": "\"StatusType\"",
                  "offset": 83
                }
              ],
              "location": "step.DataAndColumnTestAzureCDDBSPAndTableTest.ProcedureColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInDrugDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 78113200,
              "status": "passed"
            },
            "line": 8,
            "name": "Procedure \"SP_Pull_StatusType\" data count in PDDB_LP database should be equals to table \"StatusType\" data count in DrugDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"SP_Pull_StatusType\"",
                  "offset": 10
                },
                {
                  "val": "\"StatusType\"",
                  "offset": 88
                }
              ],
              "location": "step.DataAndColumnTestAzureCDDBSPAndTableTest.ProcedureDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInDrugDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and DrugDB Database"
          },
          {
            "name": "@dataFile:drug_database_test_data/data_and_column_test_between_azure_cddb_sp_and_table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-16T11:38:31.371Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and DrugDB database for table \"DrugNonCountReason\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-drugdb-database;verify-table-columns-and-data-sync-between-pddb-lp-and-drugdb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 218733700,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 514271100,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"DrugDB\" from CDDB server",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.connectionSetupWithDatabaseFromCDDBServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 48588300,
              "status": "passed"
            },
            "line": 7,
            "name": "Procedure \"SP_Pull_DrugNonCountReason\" columns in PDDB_LP database should be same as table \"DrugNonCountReason\" columns in DrugDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"SP_Pull_DrugNonCountReason\"",
                  "offset": 10
                },
                {
                  "val": "\"DrugNonCountReason\"",
                  "offset": 91
                }
              ],
              "location": "step.DataAndColumnTestAzureCDDBSPAndTableTest.ProcedureColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInDrugDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 62714100,
              "status": "passed"
            },
            "line": 8,
            "name": "Procedure \"SP_Pull_DrugNonCountReason\" data count in PDDB_LP database should be equals to table \"DrugNonCountReason\" data count in DrugDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"SP_Pull_DrugNonCountReason\"",
                  "offset": 10
                },
                {
                  "val": "\"DrugNonCountReason\"",
                  "offset": 96
                }
              ],
              "location": "step.DataAndColumnTestAzureCDDBSPAndTableTest.ProcedureDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInDrugDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and DrugDB Database"
          },
          {
            "name": "@dataFile:drug_database_test_data/data_and_column_test_between_azure_cddb_sp_and_table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-16T11:38:32.230Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and DrugDB database for table \"Inventory\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-drugdb-database;verify-table-columns-and-data-sync-between-pddb-lp-and-drugdb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 218789400,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 469068600,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"DrugDB\" from CDDB server",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.connectionSetupWithDatabaseFromCDDBServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 78306000,
              "status": "passed"
            },
            "line": 7,
            "name": "Procedure \"SP_Pull_Inventory\" columns in PDDB_LP database should be same as table \"Inventory\" columns in DrugDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"SP_Pull_Inventory\"",
                  "offset": 10
                },
                {
                  "val": "\"Inventory\"",
                  "offset": 82
                }
              ],
              "location": "step.DataAndColumnTestAzureCDDBSPAndTableTest.ProcedureColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInDrugDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected:\u003c36182\u003e but was:\u003c36188\u003e\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat step.DataAndColumnTestAzureCDDBSPAndTableTest.ProcedureDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInDrugDBDatabase(DataAndColumnTestAzureCDDBSPAndTableTest.java:31)\r\n\tat ✽.Procedure \"SP_Pull_Inventory\" data count in PDDB_LP database should be equals to table \"Inventory\" data count in DrugDB database(file:///F:/Ether/Ether/QA/parata-database-testing-qa/src/test/resources/feature/pddb-and-drugdb-database-table-test-between-azure-cddb-server.feature:8)\r\n",
              "duration": 812122500,
              "status": "failed"
            },
            "line": 8,
            "name": "Procedure \"SP_Pull_Inventory\" data count in PDDB_LP database should be equals to table \"Inventory\" data count in DrugDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"SP_Pull_Inventory\"",
                  "offset": 10
                },
                {
                  "val": "\"Inventory\"",
                  "offset": 87
                }
              ],
              "location": "step.DataAndColumnTestAzureCDDBSPAndTableTest.ProcedureDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInDrugDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and DrugDB Database"
          },
          {
            "name": "@dataFile:drug_database_test_data/data_and_column_test_between_azure_cddb_sp_and_table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-16T11:38:33.824Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and DrugDB database for table \"ClassificationShape\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-drugdb-database;verify-table-columns-and-data-sync-between-pddb-lp-and-drugdb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 233215000,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 735500300,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"DrugDB\" from CDDB server",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.connectionSetupWithDatabaseFromCDDBServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 46894100,
              "status": "passed"
            },
            "line": 7,
            "name": "Procedure \"SP_Pull_ClassificationShape\" columns in PDDB_LP database should be same as table \"ClassificationShape\" columns in DrugDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"SP_Pull_ClassificationShape\"",
                  "offset": 10
                },
                {
                  "val": "\"ClassificationShape\"",
                  "offset": 92
                }
              ],
              "location": "step.DataAndColumnTestAzureCDDBSPAndTableTest.ProcedureColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInDrugDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 62410800,
              "status": "passed"
            },
            "line": 8,
            "name": "Procedure \"SP_Pull_ClassificationShape\" data count in PDDB_LP database should be equals to table \"ClassificationShape\" data count in DrugDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"SP_Pull_ClassificationShape\"",
                  "offset": 10
                },
                {
                  "val": "\"ClassificationShape\"",
                  "offset": 97
                }
              ],
              "location": "step.DataAndColumnTestAzureCDDBSPAndTableTest.ProcedureDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInDrugDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and DrugDB Database"
          },
          {
            "name": "@dataFile:drug_database_test_data/data_and_column_test_between_azure_cddb_sp_and_table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-16T11:38:34.934Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and DrugDB database for table \"DrugStatus\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-drugdb-database;verify-table-columns-and-data-sync-between-pddb-lp-and-drugdb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 218833100,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 468861800,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"DrugDB\" from CDDB server",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.connectionSetupWithDatabaseFromCDDBServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 93805000,
              "status": "passed"
            },
            "line": 7,
            "name": "Procedure \"SP_Pull_Status\" columns in PDDB_LP database should be same as table \"DrugStatus\" columns in DrugDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"SP_Pull_Status\"",
                  "offset": 10
                },
                {
                  "val": "\"DrugStatus\"",
                  "offset": 79
                }
              ],
              "location": "step.DataAndColumnTestAzureCDDBSPAndTableTest.ProcedureColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInDrugDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected:\u003c276812\u003e but was:\u003c276854\u003e\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat step.DataAndColumnTestAzureCDDBSPAndTableTest.ProcedureDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInDrugDBDatabase(DataAndColumnTestAzureCDDBSPAndTableTest.java:31)\r\n\tat ✽.Procedure \"SP_Pull_Status\" data count in PDDB_LP database should be equals to table \"DrugStatus\" data count in DrugDB database(file:///F:/Ether/Ether/QA/parata-database-testing-qa/src/test/resources/feature/pddb-and-drugdb-database-table-test-between-azure-cddb-server.feature:8)\r\n",
              "duration": 1265529700,
              "status": "failed"
            },
            "line": 8,
            "name": "Procedure \"SP_Pull_Status\" data count in PDDB_LP database should be equals to table \"DrugStatus\" data count in DrugDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"SP_Pull_Status\"",
                  "offset": 10
                },
                {
                  "val": "\"DrugStatus\"",
                  "offset": 84
                }
              ],
              "location": "step.DataAndColumnTestAzureCDDBSPAndTableTest.ProcedureDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInDrugDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and DrugDB Database"
          },
          {
            "name": "@dataFile:drug_database_test_data/data_and_column_test_between_azure_cddb_sp_and_table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-16T11:38:36.996Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and DrugDB database for table \"DrugAttribute\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-drugdb-database;verify-table-columns-and-data-sync-between-pddb-lp-and-drugdb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 203025900,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 531447500,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"DrugDB\" from CDDB server",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.connectionSetupWithDatabaseFromCDDBServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 47023900,
              "status": "passed"
            },
            "line": 7,
            "name": "Procedure \"SP_Pull_DrugAttribute\" columns in PDDB_LP database should be same as table \"DrugAttribute\" columns in DrugDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"SP_Pull_DrugAttribute\"",
                  "offset": 10
                },
                {
                  "val": "\"DrugAttribute\"",
                  "offset": 86
                }
              ],
              "location": "step.DataAndColumnTestAzureCDDBSPAndTableTest.ProcedureColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInDrugDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected:\u003c37899\u003e but was:\u003c37905\u003e\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat step.DataAndColumnTestAzureCDDBSPAndTableTest.ProcedureDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInDrugDBDatabase(DataAndColumnTestAzureCDDBSPAndTableTest.java:31)\r\n\tat ✽.Procedure \"SP_Pull_DrugAttribute\" data count in PDDB_LP database should be equals to table \"DrugAttribute\" data count in DrugDB database(file:///F:/Ether/Ether/QA/parata-database-testing-qa/src/test/resources/feature/pddb-and-drugdb-database-table-test-between-azure-cddb-server.feature:8)\r\n",
              "duration": 421358900,
              "status": "failed"
            },
            "line": 8,
            "name": "Procedure \"SP_Pull_DrugAttribute\" data count in PDDB_LP database should be equals to table \"DrugAttribute\" data count in DrugDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"SP_Pull_DrugAttribute\"",
                  "offset": 10
                },
                {
                  "val": "\"DrugAttribute\"",
                  "offset": 91
                }
              ],
              "location": "step.DataAndColumnTestAzureCDDBSPAndTableTest.ProcedureDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInDrugDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and DrugDB Database"
          },
          {
            "name": "@dataFile:drug_database_test_data/data_and_column_test_between_azure_cddb_sp_and_table.xls"
          }
        ]
      }
    ],
    "name": "Table Data and Column Test between PDDB_LP and DrugDB Database",
    "description": "",
    "id": "table-data-and-column-test-between-pddb-lp-and-drugdb-database",
    "keyword": "Feature",
    "uri": "file:src/test/resources/feature/pddb-and-drugdb-database-table-test-between-azure-cddb-server.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2023-01-16T11:38:38.215Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"DrugColor\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb-from-azure-and-onprem-server;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 171855800,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 218680200,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 62651100,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"DrugColor\" columns in PDDB_LP database should be same as table \"DrugColor\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugColor\"",
                  "offset": 6
                },
                {
                  "val": "\"DrugColor\"",
                  "offset": 70
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 62681100,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"DrugColor\" data count in PDDB_LP database should be equals to table \"DrugColor\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugColor\"",
                  "offset": 6
                },
                {
                  "val": "\"DrugColor\"",
                  "offset": 75
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB from Azure and OnPrem Server"
          },
          {
            "name": "@dataFile:drug_database_test_data/data_and_column_test_between_onprem_azure_table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-16T11:38:38.746Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"ClassificationShape\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb-from-azure-and-onprem-server;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 156253700,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 218635000,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 62691200,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"ClassificationShape\" columns in PDDB_LP database should be same as table \"ClassificationShape\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"ClassificationShape\"",
                  "offset": 6
                },
                {
                  "val": "\"ClassificationShape\"",
                  "offset": 80
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 62495900,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"ClassificationShape\" data count in PDDB_LP database should be equals to table \"ClassificationShape\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"ClassificationShape\"",
                  "offset": 6
                },
                {
                  "val": "\"ClassificationShape\"",
                  "offset": 85
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB from Azure and OnPrem Server"
          },
          {
            "name": "@dataFile:drug_database_test_data/data_and_column_test_between_onprem_azure_table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-16T11:38:39.246Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"DrugCore\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb-from-azure-and-onprem-server;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 187188600,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 218706100,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 62428300,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"DrugCore\" columns in PDDB_LP database should be same as table \"DrugCore\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugCore\"",
                  "offset": 6
                },
                {
                  "val": "\"DrugCore\"",
                  "offset": 69
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 62510500,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"DrugCore\" data count in PDDB_LP database should be equals to table \"DrugCore\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugCore\"",
                  "offset": 6
                },
                {
                  "val": "\"DrugCore\"",
                  "offset": 74
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB from Azure and OnPrem Server"
          },
          {
            "name": "@dataFile:drug_database_test_data/data_and_column_test_between_onprem_azure_table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-16T11:38:39.793Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"DrugName\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb-from-azure-and-onprem-server;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 156225900,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 219040800,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15652500,
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 62562500,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"DrugName\" columns in PDDB_LP database should be same as table \"DrugName\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugName\"",
                  "offset": 6
                },
                {
                  "val": "\"DrugName\"",
                  "offset": 69
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 62620200,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"DrugName\" data count in PDDB_LP database should be equals to table \"DrugName\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugName\"",
                  "offset": 6
                },
                {
                  "val": "\"DrugName\"",
                  "offset": 74
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB from Azure and OnPrem Server"
          },
          {
            "name": "@dataFile:drug_database_test_data/data_and_column_test_between_onprem_azure_table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-16T11:38:40.325Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"DrugNonCountReason\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb-from-azure-and-onprem-server;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 155824800,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 203431400,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 62519100,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"DrugNonCountReason\" columns in PDDB_LP database should be same as table \"DrugNonCountReason\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugNonCountReason\"",
                  "offset": 6
                },
                {
                  "val": "\"DrugNonCountReason\"",
                  "offset": 79
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 62517000,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"DrugNonCountReason\" data count in PDDB_LP database should be equals to table \"DrugNonCountReason\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugNonCountReason\"",
                  "offset": 6
                },
                {
                  "val": "\"DrugNonCountReason\"",
                  "offset": 84
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB from Azure and OnPrem Server"
          },
          {
            "name": "@dataFile:drug_database_test_data/data_and_column_test_between_onprem_azure_table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-16T11:38:40.824Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"Firm\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb-from-azure-and-onprem-server;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 156111600,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 218800400,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 62570500,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"Firm\" columns in PDDB_LP database should be same as table \"Firm\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"Firm\"",
                  "offset": 6
                },
                {
                  "val": "\"Firm\"",
                  "offset": 65
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 62443100,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"Firm\" data count in PDDB_LP database should be equals to table \"Firm\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"Firm\"",
                  "offset": 6
                },
                {
                  "val": "\"Firm\"",
                  "offset": 70
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB from Azure and OnPrem Server"
          },
          {
            "name": "@dataFile:drug_database_test_data/data_and_column_test_between_onprem_azure_table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-16T11:38:41.324Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"Inventory\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb-from-azure-and-onprem-server;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 156357600,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 218690800,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 62574600,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"Inventory\" columns in PDDB_LP database should be same as table \"Inventory\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"Inventory\"",
                  "offset": 6
                },
                {
                  "val": "\"Inventory\"",
                  "offset": 70
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 62596200,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"Inventory\" data count in PDDB_LP database should be equals to table \"Inventory\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"Inventory\"",
                  "offset": 6
                },
                {
                  "val": "\"Inventory\"",
                  "offset": 75
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB from Azure and OnPrem Server"
          },
          {
            "name": "@dataFile:drug_database_test_data/data_and_column_test_between_onprem_azure_table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-16T11:38:41.840Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"DrugShape\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb-from-azure-and-onprem-server;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 156271300,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 218320400,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 62601600,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"DrugShape\" columns in PDDB_LP database should be same as table \"DrugShape\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugShape\"",
                  "offset": 6
                },
                {
                  "val": "\"DrugShape\"",
                  "offset": 70
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 62524500,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"DrugShape\" data count in PDDB_LP database should be equals to table \"DrugShape\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugShape\"",
                  "offset": 6
                },
                {
                  "val": "\"DrugShape\"",
                  "offset": 75
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB from Azure and OnPrem Server"
          },
          {
            "name": "@dataFile:drug_database_test_data/data_and_column_test_between_onprem_azure_table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-16T11:38:42.340Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"Measurements\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb-from-azure-and-onprem-server;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 156317700,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 218611700,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 62657600,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"Measurements\" columns in PDDB_LP database should be same as table \"Measurements\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"Measurements\"",
                  "offset": 6
                },
                {
                  "val": "\"Measurements\"",
                  "offset": 73
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 62598500,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"Measurements\" data count in PDDB_LP database should be equals to table \"Measurements\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"Measurements\"",
                  "offset": 6
                },
                {
                  "val": "\"Measurements\"",
                  "offset": 78
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB from Azure and OnPrem Server"
          },
          {
            "name": "@dataFile:drug_database_test_data/data_and_column_test_between_onprem_azure_table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-16T11:38:42.856Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"PassCanister\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb-from-azure-and-onprem-server;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 155987100,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 219045900,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 62404200,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"PassCanister\" columns in PDDB_LP database should be same as table \"PassCanister\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"PassCanister\"",
                  "offset": 6
                },
                {
                  "val": "\"PassCanister\"",
                  "offset": 73
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 62704000,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"PassCanister\" data count in PDDB_LP database should be equals to table \"PassCanister\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"PassCanister\"",
                  "offset": 6
                },
                {
                  "val": "\"PassCanister\"",
                  "offset": 78
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB from Azure and OnPrem Server"
          },
          {
            "name": "@dataFile:drug_database_test_data/data_and_column_test_between_onprem_azure_table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-16T11:38:43.356Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"PassScenarioDrug\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb-from-azure-and-onprem-server;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 156074300,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 234280300,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 62475300,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"PassScenarioDrug\" columns in PDDB_LP database should be same as table \"PassScenarioDrug\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"PassScenarioDrug\"",
                  "offset": 6
                },
                {
                  "val": "\"PassScenarioDrug\"",
                  "offset": 77
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 93675600,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"PassScenarioDrug\" data count in PDDB_LP database should be equals to table \"PassScenarioDrug\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"PassScenarioDrug\"",
                  "offset": 6
                },
                {
                  "val": "\"PassScenarioDrug\"",
                  "offset": 82
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB from Azure and OnPrem Server"
          },
          {
            "name": "@dataFile:drug_database_test_data/data_and_column_test_between_onprem_azure_table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-16T11:38:43.918Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"DosageForm\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb-from-azure-and-onprem-server;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 155792900,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 203990900,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 62261200,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"DosageForm\" columns in PDDB_LP database should be same as table \"DosageForm\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DosageForm\"",
                  "offset": 6
                },
                {
                  "val": "\"DosageForm\"",
                  "offset": 71
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 62395600,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"DosageForm\" data count in PDDB_LP database should be equals to table \"DosageForm\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DosageForm\"",
                  "offset": 6
                },
                {
                  "val": "\"DosageForm\"",
                  "offset": 76
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB from Azure and OnPrem Server"
          },
          {
            "name": "@dataFile:drug_database_test_data/data_and_column_test_between_onprem_azure_table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-16T11:38:44.402Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"DrugAttribute\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb-from-azure-and-onprem-server;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 156259800,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 219486800,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 997300,
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 62010700,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"DrugAttribute\" columns in PDDB_LP database should be same as table \"DrugAttribute\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugAttribute\"",
                  "offset": 6
                },
                {
                  "val": "\"DrugAttribute\"",
                  "offset": 74
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 71003600,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"DrugAttribute\" data count in PDDB_LP database should be equals to table \"DrugAttribute\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugAttribute\"",
                  "offset": 6
                },
                {
                  "val": "\"DrugAttribute\"",
                  "offset": 79
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB from Azure and OnPrem Server"
          },
          {
            "name": "@dataFile:drug_database_test_data/data_and_column_test_between_onprem_azure_table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-16T11:38:44.937Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"PassDrugCanister\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb-from-azure-and-onprem-server;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 153988400,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 223003500,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 61376700,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"PassDrugCanister\" columns in PDDB_LP database should be same as table \"PassDrugCanister\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"PassDrugCanister\"",
                  "offset": 6
                },
                {
                  "val": "\"PassDrugCanister\"",
                  "offset": 77
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 64988400,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"PassDrugCanister\" data count in PDDB_LP database should be equals to table \"PassDrugCanister\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"PassDrugCanister\"",
                  "offset": 6
                },
                {
                  "val": "\"PassDrugCanister\"",
                  "offset": 82
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB from Azure and OnPrem Server"
          },
          {
            "name": "@dataFile:drug_database_test_data/data_and_column_test_between_onprem_azure_table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-16T11:38:45.457Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"StrengthUnitType\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb-from-azure-and-onprem-server;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 158993700,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 216996500,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1001800,
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 63001600,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"StrengthUnitType\" columns in PDDB_LP database should be same as table \"StrengthUnitType\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"StrengthUnitType\"",
                  "offset": 6
                },
                {
                  "val": "\"StrengthUnitType\"",
                  "offset": 77
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 61002400,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"StrengthUnitType\" data count in PDDB_LP database should be equals to table \"StrengthUnitType\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"StrengthUnitType\"",
                  "offset": 6
                },
                {
                  "val": "\"StrengthUnitType\"",
                  "offset": 82
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB from Azure and OnPrem Server"
          },
          {
            "name": "@dataFile:drug_database_test_data/data_and_column_test_between_onprem_azure_table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-16T11:38:45.969Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"DeviceSettingMax\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb-from-azure-and-onprem-server;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 154995200,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 216986600,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 63000300,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"DeviceSettingMax\" columns in PDDB_LP database should be same as table \"DeviceSettingMax\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DeviceSettingMax\"",
                  "offset": 6
                },
                {
                  "val": "\"DeviceSettingMax\"",
                  "offset": 77
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 69993300,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"DeviceSettingMax\" data count in PDDB_LP database should be equals to table \"DeviceSettingMax\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"DeviceSettingMax\"",
                  "offset": 6
                },
                {
                  "val": "\"DeviceSettingMax\"",
                  "offset": 82
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB from Azure and OnPrem Server"
          },
          {
            "name": "@dataFile:drug_database_test_data/data_and_column_test_between_onprem_azure_table.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-16T11:38:46.483Z",
        "line": 3,
        "name": "Verify table columns and data sync between PDDB_LP and PDDB database for table \"Coating\"",
        "description": "",
        "id": "table-data-and-column-test-between-pddb-lp-and-pddb-from-azure-and-onprem-server;verify-table-columns-and-data-sync-between-pddb-lp-and-pddb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 155985100,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"PDDB\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 213333000,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"PDDB_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"PDDB_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 61896200,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"Coating\" columns in PDDB_LP database should be same as table \"Coating\" columns in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"Coating\"",
                  "offset": 6
                },
                {
                  "val": "\"Coating\"",
                  "offset": 68
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableColumnInPDDB_LPDatabaseShouldBeSameAsTableColumnInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 67007700,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"Coating\" data count in PDDB_LP database should be equals to table \"Coating\" data count in PDDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"Coating\"",
                  "offset": 6
                },
                {
                  "val": "\"Coating\"",
                  "offset": 73
                }
              ],
              "location": "step.DataAndColumnTestBetweenOnpremAzureTableTest.TableDataCountInPDDB_LPDatabaseShouldBeEqualToTableDataCountInPDDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between PDDB_LP and PDDB from Azure and OnPrem Server"
          },
          {
            "name": "@dataFile:drug_database_test_data/data_and_column_test_between_onprem_azure_table.xls"
          }
        ]
      }
    ],
    "name": "Table Data and Column Test between PDDB_LP and PDDB from Azure and OnPrem Server",
    "description": "",
    "id": "table-data-and-column-test-between-pddb-lp-and-pddb-from-azure-and-onprem-server",
    "keyword": "Feature",
    "uri": "file:src/test/resources/feature/pddb-and-pddb_lp-database-table-test-between-onprem-azure-server.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2023-01-16T11:38:46.990Z",
        "line": 3,
        "name": "Verify table columns and data sync between TCGMeds_LP and TCGMeds database for table \"NDC-History\"",
        "description": "",
        "id": "table-data-and-column-test-between-tcgmeds-lp-and-tcgmeds-from-azure-and-onprem-server;verify-table-columns-and-data-sync-between-tcgmeds-lp-and-tcgmeds-database-for-table-\"${azure-tablename}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 411990200,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"TCGMeds\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"TCGMeds\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 216192200,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"TCGMeds_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"TCGMeds_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 93376200,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"NDC-History\" columns in TCGMeds database should be same as table \"NDC-History\" columns in TCGMeds_LP database",
            "match": {
              "arguments": [
                {
                  "val": "\"NDC-History\"",
                  "offset": 6
                },
                {
                  "val": "\"NDC-History\"",
                  "offset": 72
                }
              ],
              "location": "step.TCGMedsAndTCGMeds_LPDatabaseTableTestBetweenOnpremAndAzureServerTest.tableColumnsInTCGMedsDatabaseShouldBeSameAsTableColumnsInTCGMeds_LPDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 93908100,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"NDC-History\" data count in TCGMeds database should be equals to table \"NDC-History\" data count in TCGMeds_LP database",
            "match": {
              "arguments": [
                {
                  "val": "\"NDC-History\"",
                  "offset": 6
                },
                {
                  "val": "\"NDC-History\"",
                  "offset": 77
                }
              ],
              "location": "step.TCGMedsAndTCGMeds_LPDatabaseTableTestBetweenOnpremAndAzureServerTest.tableDataCountInTCGMedsDatabaseShouldBeEqualsToTableDataCountInTCGMeds_LPDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between TCGMeds_LP and TCGMeds from Azure and OnPrem Server"
          },
          {
            "name": "@dataFile:drug_database_test_data/tcgmeds_and_tcgmeds_lp_database_test_between_onprem_and_azure_server.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-16T11:38:47.824Z",
        "line": 3,
        "name": "Verify table columns and data sync between TCGMeds_LP and TCGMeds database for table \"NDC-9-10-11\"",
        "description": "",
        "id": "table-data-and-column-test-between-tcgmeds-lp-and-tcgmeds-from-azure-and-onprem-server;verify-table-columns-and-data-sync-between-tcgmeds-lp-and-tcgmeds-database-for-table-\"${azure-tablename}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 375207800,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"TCGMeds\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"TCGMeds\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 218480800,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"TCGMeds_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"TCGMeds_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 93786600,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"NDC-9-10-11\" columns in TCGMeds database should be same as table \"NDC-9-10-11\" columns in TCGMeds_LP database",
            "match": {
              "arguments": [
                {
                  "val": "\"NDC-9-10-11\"",
                  "offset": 6
                },
                {
                  "val": "\"NDC-9-10-11\"",
                  "offset": 72
                }
              ],
              "location": "step.TCGMedsAndTCGMeds_LPDatabaseTableTestBetweenOnpremAndAzureServerTest.tableColumnsInTCGMedsDatabaseShouldBeSameAsTableColumnsInTCGMeds_LPDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 140604000,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"NDC-9-10-11\" data count in TCGMeds database should be equals to table \"NDC-9-10-11\" data count in TCGMeds_LP database",
            "match": {
              "arguments": [
                {
                  "val": "\"NDC-9-10-11\"",
                  "offset": 6
                },
                {
                  "val": "\"NDC-9-10-11\"",
                  "offset": 77
                }
              ],
              "location": "step.TCGMedsAndTCGMeds_LPDatabaseTableTestBetweenOnpremAndAzureServerTest.tableDataCountInTCGMedsDatabaseShouldBeEqualsToTableDataCountInTCGMeds_LPDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between TCGMeds_LP and TCGMeds from Azure and OnPrem Server"
          },
          {
            "name": "@dataFile:drug_database_test_data/tcgmeds_and_tcgmeds_lp_database_test_between_onprem_and_azure_server.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-16T11:38:48.652Z",
        "line": 3,
        "name": "Verify table columns and data sync between TCGMeds_LP and TCGMeds database for table \"Dimensions\"",
        "description": "",
        "id": "table-data-and-column-test-between-tcgmeds-lp-and-tcgmeds-from-azure-and-onprem-server;verify-table-columns-and-data-sync-between-tcgmeds-lp-and-tcgmeds-database-for-table-\"${azure-tablename}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 374945500,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"TCGMeds\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"TCGMeds\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 219023100,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"TCGMeds_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"TCGMeds_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 93583900,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"Dimensions\" columns in TCGMeds database should be same as table \"Dimensions\" columns in TCGMeds_LP database",
            "match": {
              "arguments": [
                {
                  "val": "\"Dimensions\"",
                  "offset": 6
                },
                {
                  "val": "\"Dimensions\"",
                  "offset": 71
                }
              ],
              "location": "step.TCGMedsAndTCGMeds_LPDatabaseTableTestBetweenOnpremAndAzureServerTest.tableColumnsInTCGMedsDatabaseShouldBeSameAsTableColumnsInTCGMeds_LPDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 109345100,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"Dimensions\" data count in TCGMeds database should be equals to table \"Dimensions\" data count in TCGMeds_LP database",
            "match": {
              "arguments": [
                {
                  "val": "\"Dimensions\"",
                  "offset": 6
                },
                {
                  "val": "\"Dimensions\"",
                  "offset": 76
                }
              ],
              "location": "step.TCGMedsAndTCGMeds_LPDatabaseTableTestBetweenOnpremAndAzureServerTest.tableDataCountInTCGMedsDatabaseShouldBeEqualsToTableDataCountInTCGMeds_LPDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between TCGMeds_LP and TCGMeds from Azure and OnPrem Server"
          },
          {
            "name": "@dataFile:drug_database_test_data/tcgmeds_and_tcgmeds_lp_database_test_between_onprem_and_azure_server.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-16T11:38:49.465Z",
        "line": 3,
        "name": "Verify table columns and data sync between TCGMeds_LP and TCGMeds database for table \"CanadaMeds\"",
        "description": "",
        "id": "table-data-and-column-test-between-tcgmeds-lp-and-tcgmeds-from-azure-and-onprem-server;verify-table-columns-and-data-sync-between-tcgmeds-lp-and-tcgmeds-database-for-table-\"${azure-tablename}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 343870200,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"TCGMeds\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"TCGMeds\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 203348200,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"TCGMeds_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"TCGMeds_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 109063600,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"CanadaMeds\" columns in TCGMeds database should be same as table \"CanadaMeds\" columns in TCGMeds_LP database",
            "match": {
              "arguments": [
                {
                  "val": "\"CanadaMeds\"",
                  "offset": 6
                },
                {
                  "val": "\"CanadaMeds\"",
                  "offset": 71
                }
              ],
              "location": "step.TCGMedsAndTCGMeds_LPDatabaseTableTestBetweenOnpremAndAzureServerTest.tableColumnsInTCGMedsDatabaseShouldBeSameAsTableColumnsInTCGMeds_LPDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 125048700,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"CanadaMeds\" data count in TCGMeds database should be equals to table \"CanadaMeds\" data count in TCGMeds_LP database",
            "match": {
              "arguments": [
                {
                  "val": "\"CanadaMeds\"",
                  "offset": 6
                },
                {
                  "val": "\"CanadaMeds\"",
                  "offset": 76
                }
              ],
              "location": "step.TCGMedsAndTCGMeds_LPDatabaseTableTestBetweenOnpremAndAzureServerTest.tableDataCountInTCGMedsDatabaseShouldBeEqualsToTableDataCountInTCGMeds_LPDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between TCGMeds_LP and TCGMeds from Azure and OnPrem Server"
          },
          {
            "name": "@dataFile:drug_database_test_data/tcgmeds_and_tcgmeds_lp_database_test_between_onprem_and_azure_server.xls"
          }
        ]
      },
      {
        "start_timestamp": "2023-01-16T11:38:50.246Z",
        "line": 3,
        "name": "Verify table columns and data sync between TCGMeds_LP and TCGMeds database for table \"Product\"",
        "description": "",
        "id": "table-data-and-column-test-between-tcgmeds-lp-and-tcgmeds-from-azure-and-onprem-server;verify-table-columns-and-data-sync-between-tcgmeds-lp-and-tcgmeds-database-for-table-\"${azure-tablename}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 343602000,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"TCGMeds\" from on-prem server",
            "match": {
              "arguments": [
                {
                  "val": "\"TCGMeds\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromOnPremLanServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 203159800,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"TCGMeds_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"TCGMeds_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 109605300,
              "status": "passed"
            },
            "line": 7,
            "name": "Table \"Product\" columns in TCGMeds database should be same as table \"Product\" columns in TCGMeds_LP database",
            "match": {
              "arguments": [
                {
                  "val": "\"Product\"",
                  "offset": 6
                },
                {
                  "val": "\"Product\"",
                  "offset": 68
                }
              ],
              "location": "step.TCGMedsAndTCGMeds_LPDatabaseTableTestBetweenOnpremAndAzureServerTest.tableColumnsInTCGMedsDatabaseShouldBeSameAsTableColumnsInTCGMeds_LPDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 109494100,
              "status": "passed"
            },
            "line": 8,
            "name": "Table \"Product\" data count in TCGMeds database should be equals to table \"Product\" data count in TCGMeds_LP database",
            "match": {
              "arguments": [
                {
                  "val": "\"Product\"",
                  "offset": 6
                },
                {
                  "val": "\"Product\"",
                  "offset": 73
                }
              ],
              "location": "step.TCGMedsAndTCGMeds_LPDatabaseTableTestBetweenOnpremAndAzureServerTest.tableDataCountInTCGMedsDatabaseShouldBeEqualsToTableDataCountInTCGMeds_LPDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between TCGMeds_LP and TCGMeds from Azure and OnPrem Server"
          },
          {
            "name": "@dataFile:drug_database_test_data/tcgmeds_and_tcgmeds_lp_database_test_between_onprem_and_azure_server.xls"
          }
        ]
      }
    ],
    "name": "Table Data and Column Test between TCGMeds_LP and TCGMeds from Azure and OnPrem Server",
    "description": "",
    "id": "table-data-and-column-test-between-tcgmeds-lp-and-tcgmeds-from-azure-and-onprem-server",
    "keyword": "Feature",
    "uri": "file:src/test/resources/feature/tcgmeds-and-tcgmeds_lp-database-table-test-between-onprem-and-azure-server.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2023-01-16T11:38:51.012Z",
        "line": 3,
        "name": "Verify table columns and data sync between TCGMeds_LP and DrugDB database for table \"TCGDrugs\"",
        "description": "",
        "id": "table-data-and-column-test-between-tcgmeds-lp-and-drugdb-database;verify-table-columns-and-data-sync-between-tcgmeds-lp-and-drugdb-database-for-table-\"${table-name}\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 218765800,
              "status": "passed"
            },
            "line": 4,
            "name": "Database connection for \"TCGMeds_LP\" from azure server",
            "match": {
              "arguments": [
                {
                  "val": "\"TCGMeds_LP\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.databaseConnectionFromAzureServer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 499903200,
              "status": "passed"
            },
            "line": 5,
            "name": "Database connection for \"DrugDB\" from CDDB server",
            "match": {
              "arguments": [
                {
                  "val": "\"DrugDB\"",
                  "offset": 24
                }
              ],
              "location": "step.DatabaseProcessTest.connectionSetupWithDatabaseFromCDDBServer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "Database connections are established",
            "match": {
              "location": "step.DatabaseProcessTest.databaseConnectionsAreEstablished()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 484184200,
              "status": "passed"
            },
            "line": 7,
            "name": "Procedure \"sp_Canister_Drug_Information_Api\" columns in TCGMeds_LP database should be same as table \"TCGDrugs\" columns in DrugDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"sp_Canister_Drug_Information_Api\"",
                  "offset": 10
                },
                {
                  "val": "\"TCGDrugs\"",
                  "offset": 100
                }
              ],
              "location": "step.TCGMeds_LPAndDrugDBDatabaseTableTestBetweenAzureAndOnPremServer.procedureColumnsInTCGMeds_LPDatabaseShouldBeSameAsTableColumnsInDrugDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 943754800,
              "status": "passed"
            },
            "line": 8,
            "name": "Procedure \"sp_Canister_Drug_Information_Api\" data count in TCGMeds_LP database should be equals to table \"TCGDrugs\" data count in DrugDB database",
            "match": {
              "arguments": [
                {
                  "val": "\"sp_Canister_Drug_Information_Api\"",
                  "offset": 10
                },
                {
                  "val": "\"TCGDrugs\"",
                  "offset": 105
                }
              ],
              "location": "step.TCGMeds_LPAndDrugDBDatabaseTableTestBetweenAzureAndOnPremServer.procedureDataCountInTCGMeds_LPDatabaseShouldBeEqualsToTableDataCountInDrugDBDatabase(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Feature:Table Data and Column Test between TCGMeds_LP and DrugDB Database"
          },
          {
            "name": "@dataFile:drug_database_test_data/tcgmeds_lp_and_drugdb_database_test_between_azure_and_cddb_server.xls"
          }
        ]
      }
    ],
    "name": "Table Data and Column Test between TCGMeds_LP and DrugDB Database",
    "description": "",
    "id": "table-data-and-column-test-between-tcgmeds-lp-and-drugdb-database",
    "keyword": "Feature",
    "uri": "file:src/test/resources/feature/tcgmeds_lp-and-drugdb-database-table-test-between-azure-and-cddb-server.feature",
    "tags": []
  }
]